#!/bin/zsh

$(readconf /etc/netns.conf)
CMDPIPE=$NETNSDIR/cmdpipe

# possible commands:
#allowvpnonly
#allowall

INPIPE="$NETNSDIR/pipes/$(id -u).cmd.$$.stdin"
OUTPIPE="$NETNSDIR/pipes/$(id -u).cmd.$$.stdin"
SILENT=

#while getopts "s" opt; do
#    case "${opt}" in
#        s)
#            SILENT=y
#            ;;
#        *)
#            echo "Unkown sitch ${opt}"
#            ;;
#    esac
#done
#shift $((OPTIND-1))

if ! [ -e "$CMDPIPE" ]; then
	PROCEED=y
	if ! [ -e "$BYPASSNETNS" ]; then
		if [ -n "$SILENT" ]; then
			exit 0
		fi
		if [ -t 1 ]; then
			echo "netns not running."
			echo -n "launch anyway? [y]an "
			read PROCEED
			if [ "$PROCEED" = "n" ]; then
				exit 1
			fi
		fi
		case $PROCEED in
			1|n)
				exit 1
				;;
			0|y)
				;;
			2|a)
				touch "$BYPASSNETNS"
				;;
			*)
				exit 1
				;;
		esac
	fi
	exec $*
fi

env > "$NETNSDIR/env.$(id -un)"

rm -f "$INPIPE"
mkfifo $INPIPE

CURRENTTTY=$(tty)
OUTPUT="$CURRENTTTY"

if ! [ -t 1 ] || ! [ -c "$OUTPUT" ]; then
	rm -f "$OUTPIPE"
	mkfifo "$OUTPIPE"
	OUTPUT="$OUTPIPE"
fi


while [ "$(echo $1 | sed 's/^\(.\).*$/\1/g')" = "-" ]; do
	echo "$(id -u):$PWD:$INPIPE::$1" > "$CMDPIPE"
	shift
done

CMD=$1
for i in `seq 2 $#` ; do
	ARG=$(eval echo \$$i)
	CMD="$CMD \"$ARG\""
done

killme()
{
	INPIPE=$1
	CMDPID="$(cat ${INPIPE}.pid)"
	kill -9 $CMDPID
	if [ -z "$(ps uh $CMDPID)" ]; then 
		rm -f ${INPIPE}{,.pid}
		! [ -c $OUTPUT ] && rm $OUTPUT
		kill -TERM $$
	fi
}

trap "killme $INPIPE $CMD" INT
echo "$(id -u):$PWD:$INPIPE:$OUTPUT:$CMD" > "$CMDPIPE"
CMDDONE=
if [ -c "$OUTPUT" ]; then
		stty -echo
		while [ -z "$CMDDONE" ]; do
			if read -r -t 1 -k 1 CHAR; then
				echo -n $CHAR > "$INPIPE"
			fi
			if [ -e "${INPIPE}.pid" ]; then
				CMDPID="$(cat ${INPIPE}.pid)"
				if [ -n "$CMDPID" ] && [ -z "$(ps uh $CMDPID)" ]; then
					CMDDONE=y
				fi
			else
				CMDDONE=y
			fi
		done
else
	cat $OUTPIPE
fi
rm -f "${INPIPE}.pid" "${INPIPE}"
